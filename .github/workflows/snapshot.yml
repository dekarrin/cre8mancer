name: Build Snapshot

on:
  push:
    branches: [ main ]
    
jobs:
  set-version-slug:
    name: "Set version slugline for all"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Append snapshot info to version
        run: |
          snapshot_slugline="-snapshot-$(date +'%Y%m%d')-${GITHUB_SHA:0:6}"
          sed -i 's/\(VERSION = "[^"]*\)"/\1'"$snapshot_slugline"'"/' cre8/version.py
          version="$(python cre8forge.py version)"
          echo "$version"
          echo "version=$version" > VERSION_VARS
          echo "snapshot_slugline=$snapshot_slugline" >> VERSION_VARS
      - name: Upload version strings
        uses: actions/upload-artifact@v3
        with:
          name: VERSION_VARS
          path: VERSION_VARS
  build-win:
    name: "Build for Windows"
    needs: set-version-slug
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Get version vars
        uses: actions/download-artifact@v3
        with:
          name: VERSION_VARS
      - name: Load version strings
        shell: bash
        run: |
          . VERSION_VARS/VERSION_VARS
          rm -rf VERSION_VARS
          echo "version=$version" >> $GITHUB_ENV
          echo "snapshot_slugline=$snapshot_slugline" >> $GITHUB_ENV
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Append snapshot info to version
        shell: bash
        run: |
          sed -i 's/\(VERSION = "[^"]*\)"/\1'"${{ env.snapshot_slugline }}"'"/' cre8/version.py
          python cre8forge.py version
      - name: Install pyinstaller
        run: pip install -U pyinstaller
      - name: Run exec bundler
        shell: bash
        run: |
          bundle_path="$(scripts/run_pyinstaller.sh)"
          echo "bundle_path=$bundle_path" >> $GITHUB_ENV
      - name: Create package
        shell: bash
        run: |
          package_path="$(scripts/create_versioned_package.sh "${{ env.bundle_path }}" win)"
          echo "package_path=$package_path" >> $GITHUB_ENV
      - name: Create archive
        shell: bash
        run: |
          package_dir="$(dirname "${{ env.package_path }}")"
          package_name="$(basename "${{ env.package_path }}")"
          cd "$package_dir"
          7z a "$package_name.zip" "$package_name"
          archive_name="$package_name.zip"
          archive_path="$(pwd)/$archive_name"
          echo "archive_path=$archive_path" >> $GITHUB_ENV
          echo "archive_name=$archive_name" >> $GITHUB_ENV
      - name: Upload build to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.archive_name }}
          path: dist/${{ env.archive_name }}
  publish:
    name: Publish snapshot
    runs-on: ubuntu-latest
    needs: build-win
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts/
      - name: Show artifacts
        run: ls -la ./artifacts/
          
